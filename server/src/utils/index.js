export const planPrompt = (
  age,
  height,
  weight,
  injuriesOrAllergies,
  days,
  fitness_goal,
  fitness_level
) =>
  "You are a JSON plan generator for a fitness coaching app. " +
  "Based on the following user details, generate 1 personalized workout plan and 1 personalized diet plan in a single strict JSON object. " +
  "User details: " +
  `Age: ${age}, Height: ${height}, Weight: ${weight}, Injuries, Allergies or limitations: ${injuriesOrAllergies}, Available days for workout: ${days}-(The days should be a days name or number), Fitness Goal: ${fitness_goal}, Fitness Level: ${fitness_level}. ` +

  "\n\n‚öôÔ∏è Requirements:\n" +
  "- Workout and diet must align with the user's fitness level and goal.\n" +
  "- Avoid overtraining same muscles on consecutive days.\n" +
  "- Respect any injuries, allergies, or food restrictions.\n" +
  "- Meals should be evenly distributed across the day.\n" +
  "- Return a unique result every time (no repetition from previous outputs).\n" +
  "- The workout must include a short, unique 'name' inspired by the fitness goal, styled like a Gen-Z anime-themed title. The name should be creative, catchy, and easy to read ‚Äî not in Japanese ‚Äî and must end with the word 'Plan'. It should sound energetic and modern (e.g., 'Muscle Mayhem Plan', 'Pumpcore Plan', 'GrindRush Plan'). Avoid generic or boring names.\n" +
  "- The diet must include a realistic numeric 'dailyCalories' field.\n" +

  "\n\nüì¶ Return a SINGLE JSON object in the following format (no array, no extra text):\n" +
  "{\n" +
  '    "name": "Plan Name Inspired by Fitness Goal",\n' +
  '  "workoutPlan": {\n' +
  '    "schedule": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] \n' + "The `schedule` array must only include the actual day names provided by the user in their available workout days." +
  '    "exercises": [\n' +
  "      {\n" +
  '        "day": "Monday",\n' + "Must only include the actual day names provided by the user in their available workout days." +
  '        "routines": [\n' +
  "          {\n" +
  '            "name": "Exercise Name",\n' +
  '            "sets": 3,\n' +
  '            "reps": 12\n' +
  "          }\n" +
  "        ]\n" +
  "      }\n" +
  "    ]\n" +
  "  },\n" +
  '  "dietPlan": {\n' +
  '    "dailyCalories": 2200,\n' +
  '    "meals": [\n' +
  "      {\n" +
  '        "name": "Meal Name (e.g., Breakfast, Lunch, Snack)",\n' +
  '        "foods": ["Oatmeal with 1 cup milk", "2 boiled eggs", "1 banana"]\n' +
  "      }\n" +
  "    ]\n" +
  "  }\n" +
  "}\n\n" +

  "‚ö†Ô∏è Strict Rules:\n" +
  "1. DO NOT include extra fields outside the schema above.\n" +
  "2. 'sets' and 'reps' must be numbers, not strings or descriptions.\n" +
  "3. Use fixed numeric values ‚Äî no 'to failure', 'as needed', etc.\n" +
  "4. The 'name' field in workoutPlan is REQUIRED and must change with each request.\n" +
  "5. No repetition of exercises or foods from previous outputs.\n" +
  "6. DO NOT wrap the JSON in triple backticks (```), markdown, or text.\n" +
  "7. DO NOT return anything before or after the JSON.\n" +
  "8. The response must start directly with `{` and end with `}`.\n" +
  "9. Return only ONE object, not a list or multiple JSONs.\n" +
  "10. Meals must be simple strings, with clear quantities, inside the 'foods' array.\n" +
  "11. Only return the raw JSON object ‚Äî no explanation, labels, or surrounding text.\n" +

  "\n‚úÖ Generate only one combined unique plan and return only the raw valid JSON object as described above.";
